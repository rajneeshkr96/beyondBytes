name: CI and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.17.0]

    env:
      BASE_URL: ${{ secrets.BASE_URL }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      UPLOADTHING_APP_ID: ${{ secrets.UPLOADTHING_APP_ID }}
      UPLOADTHING_SECRET: ${{ secrets.UPLOADTHING_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Build Project
        run: yarn build

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure that the deploy job only runs if the build job is successful

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Deploy to Vercel
        run: vercel --prod
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}          
          # Add any other environment variables required for deployment
